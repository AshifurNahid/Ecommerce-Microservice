server.port=8222

# ============================================
# JWT Configuration
# ============================================
jwt.secret=5367566B59703373367639792F423F4528482B4D6251655468576D5A71347437
jwt.access-token-expiration=86400000
jwt.refresh-token-expiration=604800000
jwt.clock-skew=300000

# ============================================
# Security Configuration
# ============================================
# Public endpoints (no authentication required)
app.security.public-endpoints=/api/auth/**,/actuator/**

# Cross-Origin Resource Sharing (CORS)
cors.allowed-origins=${CORS_ORIGINS:http://localhost:3000,http://localhost:8080}
cors.allowed-methods=GET,POST,PUT,PATCH,DELETE,OPTIONS
cors.allowed-headers=Authorization,Content-Type
cors.exposed-headers=
cors.allow-credentials=true
cors.max-age=1h

# Admin-only endpoints (role-based access control)
#app.security.admin-endpoints=/api/v1/admin/**,/api/v1/users/admin/**

# ============================================
# Gateway Discovery Configuration
# ============================================
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# ============================================
# Route Configuration
# ============================================
# NOTE: Routes can be defined here OR in GatewayConfig.java
# Currently using GatewayConfig.java for programmatic route definition
# If you prefer properties-based configuration, uncomment below:

# User Service Route (Updated from customer-service)
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://user-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/auth/**

# Product Service Route
spring.cloud.gateway.routes[1].id=product-service
spring.cloud.gateway.routes[1].uri=lb://product-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/v1/products/**

# Category Service Route
spring.cloud.gateway.routes[2].id=product-service-categories
spring.cloud.gateway.routes[2].uri=lb://product-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/v1/categories/**

# Order Service Route
spring.cloud.gateway.routes[3].id=order-service
spring.cloud.gateway.routes[3].uri=lb://order-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/v1/orders/**

# Payment Service Route
spring.cloud.gateway.routes[4].id=payment-service
spring.cloud.gateway.routes[4].uri=lb://payment-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/v1/payments/**

# ============================================
# Load Balancer Configuration
# ============================================
spring.cloud.loadbalancer.ribbon.enabled=false

# ============================================
# Eureka Client Configuration
# ============================================
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

