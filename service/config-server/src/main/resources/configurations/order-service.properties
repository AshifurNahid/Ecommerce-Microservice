server.port=8070

spring.datasource.url=jdbc:postgresql://localhost:5432/order_db
spring.datasource.username=alibou
spring.datasource.password= alibou
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true

application.config.user-service.url=http://localhost:8080/api/users
application.config.product-service.url=http://localhost:8050/api/v1/products
application.config.payment-service.url=http://localhost:8222/api/v1/payments


#Kafka configuration
spring.kafka.bootstrap-servers=localhost:9092

kafka.topic.order-notification=order-topic
#spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer = org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.properties.spring.json.type.mapping = orderEvent: com.nahid.order.dto.OrderEventDto

#Flyway configuration
#spring.flyway.enabled=true
#spring.flyway.baseline-on-migrate=true
#spring.flyway.baseline-version=0
#spring.flyway.baseline-description="init"
#spring.flyway.user= ${spring.datasource.username}
#spring.flyway.password= ${spring.datasource.password}